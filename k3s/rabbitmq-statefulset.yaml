apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: rabbitmq
spec:
  serviceName: "rabbitmq"
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      containers:
        - name: rabbitmq
          image: bsamaha/myrabbitmq
          ports:
            - containerPort: 5672
            - containerPort: 15672
            - containerPort: 4369
            - containerPort: 25672
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "myrabbituser"
            - name: RABBITMQ_DEFAULT_PASS
              value: "myrabbitpassword"
            - name: RABBITMQ_ERLANG_COOKIE
              # kubectl create secret generic erlang-cookie --from-literal=cookie='<your-erlang-cookie>' -n {your_namespace}
              valueFrom:
                secretKeyRef:
                  name: erlang-cookie
                  key: cookie
          livenessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "status"]
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 15
          readinessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "ping"]
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 10
          resources:
            requests:
              memory: "500Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
  volumeClaimTemplates:
    - metadata:
        name: rabbitmq-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
